{"version":3,"sources":["components/AnswerBox/index.js","components/FailBox/index.js","components/Result/index.js","components/Human/index.js","components/instance/index.js","App.js","index.js"],"names":["spaces","correctLetters","wordFromAPI","className","map","item","index","letter","find","x","failedLetters","buttonAction","disabled","title","buttonLabel","onClick","VisibilitySetter","visible","classes","props","failedLetterCount","create_instance","axios","create","baseURL","get_randomword","a","get","params","hasDictionaryDef","minCorpusCount","maxCorpusCount","maxDictionaryCount","minLength","maxLength","api_key","randomword","useState","setWordFromAPI","isPaused","setIsPaused","isGameOver","setIsGameOver","resultBox","setResultBox","setFailedLetters","setCorrectLetters","word","setWord","inputRef","useRef","wordSetter","wordArr","toUpperCase","split","splice","indexOf","getDataFromAPI","Instance","then","response","console","log","data","status","catch","error","countCorrectLetters","uniqueLetters","filterUniqueItems","length","items","obj","uniqueItems","hasOwnProperty","push","ref","onKeyDown","event","keyChar","key","preventDefault","failed","element","newCorrectLetters","concat","onFocus","onBlur","Human","FailBox","AnswerBox","arrayOfSpace","arraySize","emptyBoxList","Result","current","focus","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.f5a3e1d5.chunk.js","sourcesContent":["import React from 'react'\nimport './style.scss'\nexport default ({ spaces, correctLetters, wordFromAPI }) => (\n  <div className= 'wrapper-anserbox'>\n    {spaces.map((item, index) => {\n      return(\n      <div className = {`item ${spaces?\"disabled\":\"\"}`} key={index}/>\n      )\n    })}\n    {wordFromAPI.map((letter, index) => {\n      return (\n        <div className =  \"item\"  key={index}>\n          {correctLetters.find(x => x === letter) ? letter : ''}\n        </div>\n      )\n    })}\n  </div>\n)\n","import React from 'react'\nimport './style.scss'\n\nexport default ({ failedLetters }) => (\n  <div className= 'wrapper-failbox'>\n    <div className= 'title'>You missed:</div>\n    <div className= 'list'>\n      {failedLetters.map(item => (\n        <div className = 'listItem' key={item}>{item}</div>\n      ))}\n    </div>\n  </div>\n)\n\n\n","import React from 'react'\nimport './style-result.scss'\nexport default ({ buttonAction, disabled, title, buttonLabel }) => (\n  <div className={`wrapper-result ${disabled?'disabled':''}` }>\n    <div className= 'content'>\n      <div className='title'> {title}</div>\n      <button className='button' onClick={buttonAction}>{buttonLabel}</button>\n    </div>\n  </div>\n)\n","import React from 'react'\nimport './style.scss'\n\nconst VisibilitySetter = ({ visible, classes, ...props }) =>\n  visible ? <div className= {classes} {...props} /> : null\n\nexport default ({ failedLetterCount }) => (\n  <div className ='man'>\n    <VisibilitySetter visible={failedLetterCount >= 1} classes=\"head\">\n      <div className= 'hair' />\n      <div className= 'hair right' />\n      <div className= 'eye' />\n      <div className= 'eye right' />\n      <div className= 'ear' />\n      <div className= 'ear right' />\n      <div  className= 'nose' />\n      <div className= 'mouth'  />\n    </VisibilitySetter>\n    <VisibilitySetter visible={failedLetterCount >= 2} classes=\"neck\" />\n    <VisibilitySetter visible={failedLetterCount >= 3} classes=\"corpus\">\n      <VisibilitySetter visible={failedLetterCount >= 3} classes=\"chest\">\n        <VisibilitySetter visible={failedLetterCount >= 4} classes=\"arm\">\n          <VisibilitySetter visible={failedLetterCount >= 6} classes=\"hand\" />\n        </VisibilitySetter>\n        <VisibilitySetter visible={failedLetterCount >= 8} classes=\"leg\">\n          <VisibilitySetter\n            visible={failedLetterCount >= 10}\n            classes=\"foot\"\n          />\n        </VisibilitySetter>\n      </VisibilitySetter>\n      <VisibilitySetter\n        visible={failedLetterCount >= 3}\n        classes=\"chest right\"\n      >\n        <VisibilitySetter\n          visible={failedLetterCount >= 5}\n          classes=\"arm right\"\n        >\n          <VisibilitySetter visible={failedLetterCount >= 7} classes=\"hand\" />\n        </VisibilitySetter>\n        <VisibilitySetter\n          visible={failedLetterCount >= 9}\n          classes=\"leg right\"\n        >\n          <VisibilitySetter\n            visible={failedLetterCount >= 11}\n            classes=\"foot right\"\n          />\n        </VisibilitySetter>\n      </VisibilitySetter>\n    </VisibilitySetter>\n  </div>\n)\n","import React, { useState, useRef } from 'react'\nimport axios from 'axios';\n\nconst create_instance = axios.create({\n        baseURL : 'https://random-words-api.vercel.app/',\n    })\nconst get_randomword = async () =>{\n    const randomword= await create_instance.get ( `word`,\n         {\n             params:{\n            hasDictionaryDef: true,\n            minCorpusCount: 0,\n            maxCorpusCount: -1,\n            maxDictionaryCount: -1,\n            minLength: 6,\n            maxLength: 12,\n            api_key: 'a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5',\n         }\n        })\n    return(randomword)\n}\n\nexport default{\n    get_randomword\n}","import React, { useState, useRef } from 'react'\nimport AnswerBox from './components/AnswerBox'\nimport FailBox from './components/FailBox'\nimport Result from './components/Result'\nimport Human from './components/Human'\nimport Instance from './components/instance/index'\n\nexport default () => {\n  const [wordFromAPI, setWordFromAPI] = useState([])\n  const [isPaused, setIsPaused] = useState(false)\n  const [isGameOver, setIsGameOver] = useState(false)\n  const [resultBox, setResultBox] = useState({\n    disabled: false,\n    title: 'Hangman',\n    buttonLabel: 'Start Game',\n  })\n  const [failedLetters, setFailedLetters] = useState([])\n  const [correctLetters, setCorrectLetters] = useState([])\n  const [word, setWord] = useState('')\n  const inputRef = useRef(null)\n\n  const input_letter = event => {\n    let keyChar = event.key\n    event.preventDefault()\n    if (\n      wordFromAPI.length > 0 &&\n      'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'.indexOf(keyChar) >\n        -1\n    ) {\n      keyChar = keyChar.toUpperCase()\n      if (\n        !failedLetters.find(x => x === keyChar) &&\n        !correctLetters.find(x => x === keyChar)\n      ) {\n        let failed = true\n        wordFromAPI.map( element => {\n          if (keyChar === element) {\n            const newCorrectLetters = correctLetters.concat(keyChar)\n            setCorrectLetters(newCorrectLetters)\n            countCorrectLetters(newCorrectLetters)\n            failed = false\n          }\n        })\n        if (failed)  {\n          setFailedLetters(failedLetters.concat(keyChar))\n          if (failedLetters.length === 10) {\n            setResultBox({\n              disabled: false,\n              title: `Game Over { word: ${word} }`,\n              buttonLabel: 'New Word',\n            })\n            setIsGameOver(true)\n          }\n        }\n      }\n    }\n  }\n\n  const emptyBoxList = () => {\n    let arrayOfSpace = []\n    if (wordFromAPI.length > 0) {\n      const arraySize = wordFromAPI.length\n      for (let x = 0; x < 12 - arraySize; x++) {\n        arrayOfSpace.push(' ')\n      }\n    }\n    return arrayOfSpace\n  }\n\n  const startGame = () => {\n    setResultBox({\n      disabled: true,\n    })\n    setFailedLetters([])\n    setCorrectLetters([])\n    setWordFromAPI([])\n    setWord('')\n    getDataFromAPI()\n    setIsGameOver(false)\n    inputRef.current.focus()\n  }\n\n  const continueGame = () => {\n    setResultBox({\n      disabled: true,\n    })\n    inputRef.current.focus()\n  }\n\n  const wordSetter = word => {\n    let wordArr = word.toUpperCase().split('')\n    wordArr.map(item => {\n      item === '-' && wordArr.splice(wordArr.indexOf('-'), 1)\n      item === ' ' && wordArr.splice(wordArr.indexOf(' '), 1)\n      return item\n    })\n\n    setWordFromAPI(wordArr)\n    setWord(word)\n  }\n\n  const getDataFromAPI = async () => {\n    await Instance.get_randomword()\n      .then(response => {\n        console.log(\"randword\",response.data[0].word)\n        wordSetter(response.data[0].word)\n        return response.status\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  const countCorrectLetters = correctLetters => {\n    let uniqueLetters = filterUniqueItems(wordFromAPI)\n    if (correctLetters.length === uniqueLetters.length) {\n      setResultBox({\n        disabled: false,\n        title: '★ You Won! ★',\n        buttonLabel: 'Restart Game',\n      })\n      setIsGameOver(true)\n    }\n  }\n\n  const filterUniqueItems = items => {\n    const obj = {},\n    uniqueItems = []\n    items.map(item=>{\n    !(obj.hasOwnProperty(item)) &&  uniqueItems.push(item)\n    obj[item] = 1\n    })\n    console.log(\"uniqueItems\",uniqueItems) \n    return uniqueItems\n  }\n\n  return (\n    <div className =\"AppWrapper\">\n      <div className = \"GameInstruction\"> Press any letters to play.</div>\n      <div className = \"Gallow\">\n        <div className=\"DownPipe\" />\n        <input\n          className='input'\n          ref={inputRef}\n          {...(!isGameOver && !isPaused && { onKeyDown: input_letter })}\n          onFocus={() => setIsPaused(false)}\n          onBlur={() => {\n            if (!isGameOver) {\n              setIsPaused(true)\n              setResultBox({\n                title: 'Game is Paused',\n                disabled: false,\n                buttonLabel: 'continue',\n              })\n            }\n          }}\n        />\n      </div>\n      <Human failedLetterCount={failedLetters.length} />\n\n      <FailBox failedLetters={failedLetters} />\n      <AnswerBox\n        wordFromAPI={wordFromAPI}\n        correctLetters={correctLetters}\n        spaces={emptyBoxList()}\n      />\n\n      <div className = \"RightBlueTriangle\" />\n      <Result\n        title={resultBox.title}\n        disabled={resultBox.disabled}\n        buttonLabel={resultBox.buttonLabel}\n        buttonAction={isPaused ? continueGame : startGame}\n      />\n      {!isPaused && <button className='button pause'> Pause Game</button>}\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.scss';\n\n\nReactDOM.render(\n  <>\n  <App />\n  </>,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}